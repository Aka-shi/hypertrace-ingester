package org.hypertrace.attribute;

import java.util.Map;
import org.apache.commons.lang3.StringUtils;
import org.hypertrace.core.datamodel.AttributeValue;
import org.hypertrace.core.datamodel.Event;
import org.hypertrace.core.span.constants.RawSpanConstants;
import org.hypertrace.core.span.constants.v1.Envoy;
import org.hypertrace.core.span.constants.v1.OCAttribute;
import org.hypertrace.core.span.constants.v1.OCSpanKind;
import org.hypertrace.core.span.constants.v1.SpanNamePrefix;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SpanTagResolver {

  private static final Logger LOGGER = LoggerFactory.getLogger(SpanTagResolver.class);

  private static final String OTEL_SPAN_KIND = "span_kind";
  private static final String OTEL_SPAN_KIND_SERVER_VALUE = "server";
  private static final String OTEL_SPAN_KIND_CLIENT_CLIENT = "client";

  private static final String OC_SPAN_KIND = Constants.getRawSpanConstant(OCAttribute.OC_ATTRIBUTE_SPAN_KIND);
  private static final String OC_SPAN_KIND_SERVER_VALUE = Constants.getRawSpanConstant(OCSpanKind.OC_SPAN_KIND_SERVER);
  private static final String OC_SPAN_KIND_CLIENT_VALUE = Constants.getRawSpanConstant(OCSpanKind.OC_SPAN_KIND_CLIENT);
  // Spans that are generated by Go Opencensus grpc/http clients have this attribute.
  private static final String OC_CLIENT_KEY = Constants.getRawSpanConstant(OCAttribute.OC_ATTRIBUTE_CLIENT_KEY);

  // todo: can't find any envoy related attributes in OTEL
  private static final String envoyOperationNameAttr = RawSpanConstants.getValue(Envoy.ENVOY_OPERATION_NAME);
  private static final String envoyIngressSpanValue = RawSpanConstants.getValue(Envoy.ENVOY_INGRESS_SPAN);
  private static final String envoyEgressSpanValue = RawSpanConstants.getValue(Envoy.ENVOY_EGRESS_SPAN);

  public static Boolean checkForEntrySpan(Event event) {
    Map<String, AttributeValue> attributeMap = event.getAttributes().getAttributeMap();
    // Figure out if event is entry or exit based on other span attributes
    Boolean isEntry = null;
    if (attributeMap.containsKey(OTEL_SPAN_KIND)) {
      String spanKindValue = attributeMap.get(OTEL_SPAN_KIND).getValue();
      if (spanKindValue.equalsIgnoreCase(OTEL_SPAN_KIND_SERVER_VALUE)) {
        isEntry = true;
      } else if (spanKindValue.equalsIgnoreCase(OTEL_SPAN_KIND_CLIENT_CLIENT)) {
        isEntry = false;
      } else {
        LOGGER.debug("Unrecognized span.kind value: {}. Event: {}.", spanKindValue, event);
      }
    } else if (attributeMap.containsKey(OC_SPAN_KIND)) {
      String spanKindValue = attributeMap.get(OC_SPAN_KIND).getValue();
      if (spanKindValue.equalsIgnoreCase(OC_SPAN_KIND_SERVER_VALUE)) {
        isEntry = true;
      } else if (spanKindValue.equalsIgnoreCase(OC_SPAN_KIND_CLIENT_VALUE)) {
        isEntry = false;
      } else {
        LOGGER.debug("Unrecognized span.kind value: {}. Event: {}.", spanKindValue, event);
      }
    } else if (attributeMap.containsKey(OC_CLIENT_KEY)) {
      String clientValue = attributeMap.get(OC_CLIENT_KEY).getValue();
      if (clientValue.equalsIgnoreCase("false")) {
        isEntry = true;
      } else if (clientValue.equalsIgnoreCase("true")) {
        isEntry = false;
      } else {
        LOGGER.debug("Unrecognized Client value: {}. Event: {}.", clientValue, event);
      }
    } else if (attributeMap.containsKey(envoyOperationNameAttr)) {
      String spanType = attributeMap.get(envoyOperationNameAttr).getValue();
      if (StringUtils.equalsIgnoreCase(envoyIngressSpanValue, spanType)) {
        isEntry = true;
      } else if (StringUtils.equalsIgnoreCase(envoyEgressSpanValue, spanType)) {
        isEntry = false;
      } else {
        LOGGER.debug("Unrecognized envoyOperationNameAttr value: {}. Event: {}.", spanType, event);
      }
    } else if (StringUtils.startsWith(event.getEventName(),
        RawSpanConstants.getValue(SpanNamePrefix.SPAN_NAME_PREFIX_SENT))) {
      // Go Opencensus instrumentation seems to have this convention Sent. prefix
      // meaning client/exit/backend call
      isEntry = false;
    } else if (StringUtils.startsWith(event.getEventName(),
        RawSpanConstants.getValue(SpanNamePrefix.SPAN_NAME_PREFIX_RECV))) {
      isEntry = true;
    }
    return isEntry;
  }
}
